name: PerformanceSuite Tests

on: 
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - '*'
jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: SwiftLint
        run:
          Pods/SwiftLint/swiftlint
      - name: Build & Test
        env:
          scheme: PerformanceSuite-Unit-Tests
          platform: ${{ 'iOS Simulator' }}
          workspace: PerformanceApp.xcworkspace
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild test -scheme "$scheme" -workspace "$workspace" -destination "platform=$platform,name=$device" -test-iterations 30 -run-tests-until-failure -enableCodeCoverage YES -resultBundlePath ResultBundle.xcresult
          xcrun xccov view --report ResultBundle.xcresult | grep libPerformanceSuite.a | grep -o -E '[0-9\.]+%' | awk '{print $1}' > code_coverage.txt
      - name: Upload code coverage
        uses: actions/upload-artifact@v3
        with:
          name: code_coverage.txt
          path: code_coverage.txt

  coverage:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: action-badges/create-orphan-branch@0.1.0
        with:
          branch-name: badges
      - name: Download code_coverage.txt
        uses: actions/download-artifact@v3
        with:
          name: code_coverage.txt
      - name: Load coverage data
        id: load-coverage
        run: |
          COVERAGE=$(cat code_coverage.txt)
          echo "::set-output name=coverage::$COVERAGE"
      - name: Make Coverage Badge
        uses: action-badges/core@0.2.2
        with:
          label: coverage
          message: "${{ steps.load-coverage.outputs.coverage }}"
          message-color: green
          file-name: code_coverage.svg
          badge-branch: badges
          github-token: "${{ secrets.GITHUB_TOKEN }}"